version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER={{cookiecutter.project_slug}}

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: /start-dev.sh
    depends_on:
      - postgres{% if cookiecutter.use_mailhog == 'y' %}
      - mailhog{% endif %}
      - node
    environment:
      - POSTGRES_USER={{cookiecutter.project_slug}}
      - USE_DOCKER=yes
    volumes:
      - .:/app
    ports:
      - "8000:8000"

{% if cookiecutter.use_pycharm == 'y' %}
  pycharm:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER={{cookiecutter.project_slug}}
    volumes:
      - .:/app
{% endif %}

{% if cookiecutter.use_mailhog == 'y' %}
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
{% endif %}

  node:
    build:
      context: .
      dockerfile: ./compose/node/Dockerfile-dev
    volumes:
      - .:/app
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: "gulp"
    ports:
      # BrowserSync port.
      - "3000:3000"
      # BrowserSync UI port.
      - "3001:3001"

